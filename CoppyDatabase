import android.content.Intent;
import android.database.sqlite.SQLiteDatabase;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

public class ResultsMainActivity extends AppCompatActivity {

    Button btn , btn2;
    String DATABASE_NAME = "Data";
    String DB_PATH_SUFFIX = "/databases/";
    SQLiteDatabase Data = null ;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_results_main);


        Nextform1();
        coppydatabase();
    }

    private void Nextform1() {
        btn = (Button)findViewById(R.id.btntest);
        btn2 = (Button)findViewById(R.id.btnre);
        btn2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intet = new Intent(v.getContext() , Saving_Information.class );
                startActivity(intet);
            }
        });
        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent inte = new Intent(v.getContext() , exeData.class );
                startActivity(inte);
            }
        });

    }


    private void coppydatabase() {
        File filedata = getDatabasePath(DATABASE_NAME);
        if(!filedata.exists()){
            try{
                coppydatabasefromassets();
                Toast.makeText(this , "coppy database successfully" , Toast.LENGTH_LONG).show();
            }catch (Exception e){
                Toast.makeText(this , e.toString() , Toast.LENGTH_LONG).show();
            }
        }
    }

    private void coppydatabasefromassets() {
        try {
            InputStream inputs ;
            String outFileName = AndressDatabase();
            inputs = getAssets().open(DATABASE_NAME);
            File f = new File(getApplicationInfo().dataDir + DB_PATH_SUFFIX);
            if(!f.exists()){
                f.mkdir();
            }
            OutputStream outputstr = new FileOutputStream(outFileName);
            byte[] buffer = new byte[2048];
            int length;
            while ((length = inputs.read(buffer))>0){
                outputstr.write(buffer , 0 , length);

            }
            outputstr.flush();
            outputstr.close();
            inputs.close();

        }catch (Exception e){
            Log.e("error ",e.toString());
        }

    }

    private String AndressDatabase(){
        return getApplicationInfo().dataDir +DB_PATH_SUFFIX+DATABASE_NAME;
    }
}
